{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMC1AVEsd3XkKh+OszXSpU1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/maidahshah/inf1340-programmingfordatascience-fa22/blob/main/MAIDAH-SHAH.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Maidah Shah**  \n",
        "Assignment 1: Midterm Project, Tidying UN Dataset   \n",
        "INF1340, Fall 2022   \n",
        "November 9, 2022\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "kQo4O_PI4mCl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 1 ###\n",
        "# Upload the dataset to google colab.\n",
        "\n",
        "# Examine the raw data. As there are 6 tables, each in seperate tabs, we will split the dataset and store each split as a data frame.\n",
        "# Tabs: \"CONTENTS\", \"ANNEX\", and \"NOTES\" do not need to be split as they just contain supplementary information to help interpret the data. \n",
        "\n",
        "import pandas as pd # Import library to read and split the data file, as well as to perform other functions later.\n",
        "data = pd.ExcelFile(\"/content/UN_MigrantStockTotal_2015.xlsx\") # Read in the data using ExcelFile as the file is in an xlsx format.\n",
        "\n",
        "# Split each tab into a data frame containing one table using read_excel for the xlsx format. There will be 6 data frames in total, one for each tab/table. \n",
        "# Tab numbers correspond to table numbers. We will set the data frame numbers to match.\n",
        "# Skip the first 14 rows in each data frame as they do not contain data.\n",
        "df1orig = pd.read_excel(data, sheet_name='Table 1', skiprows=range(14)) # The \"orig\" stands for original as we will copy the data frames later and the original will remain unchanged.\n",
        "df2orig = pd.read_excel(data, sheet_name='Table 2', skiprows=range(14))\n",
        "df3orig = pd.read_excel(data, sheet_name='Table 3', skiprows=range(14))\n",
        "df4orig = pd.read_excel(data, sheet_name='Table 4', skiprows=range(14))\n",
        "df5orig = pd.read_excel(data, sheet_name='Table 5', skiprows=range(14))\n",
        "df6orig = pd.read_excel(data, sheet_name='Table 6', skiprows=range(14))"
      ],
      "metadata": {
        "id": "8rhNkhNOgubj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 2 ###\n",
        "# Examine the table for violations of tidy data principles. We will start with df1.\n",
        "\n",
        "df1orig.head()\n",
        "\n",
        "# Tidy Data Principle 1: Each observation forms a row.\n",
        "# Tidy Data Principle 2: Each variable forms its own column.\n",
        "# Tidy Data Principle 3: Variables need to be in cells, not rows and columns. \n",
        "# Tidy Data Principle 4: Each table column needs to have a singular data type.\n",
        "# Tidy Data Principle 5: A single observational unit must be in one table.\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that the migrant stock/sex headers are not merged or labelled for all the years. \n",
        "# There appear to be two header rows with stock/sex and year as the only multilevel headers in the data frame. \n",
        "# Migrant stock, sex, and year are three unique variables.\n",
        "# The \"Sort order\", \"Major area, region, country or area of destination\", \"Notes\", \"Country code\", and \"Type of data (a)\" columns repeat in each data frame, except for \"Type of data (a)\" in df2. \n",
        "# A unique identifier column, \"Sort order\" is already present in each data frame, so \"Major area, region, country or area of destination\" and \"Country code\" appear redundant.\n",
        "# \"Notes\" and \"Type of data (a)\" seem to be supplementary details to help interpret the data.\n",
        "\n",
        "# VIOLATIONS: \n",
        "# Each observation does not form a row, as the year variable is embedded in a row and the sex columns are not all labelled. \n",
        "# Column headers are values that contain useful information and not variable names (e.g., Male, 1990), and each variable does not have its own column.\n",
        "# Variables are stored in rows and columns (i.e., sex, year).\n",
        "# Multiple variables and data types are stored in one column (i.e., sex, year).\n",
        "# There are multiple observational units in the table (i.e., area/region/country, migrant stock)\n",
        "\n",
        "# PLAN:\n",
        "# We will combine the stock, sex, and year headers into a variable to enable the removal of the second header row with years.\n",
        "# We will then melt the header into three variables and columns.\n",
        "# We will then split the data frame into two tables for df1. One for area/region/country, and the second for migrant stock.\n",
        "# For df2-df6, we will remove the \"Major area, region, country or area of destination\", \"Notes\", \"Country code\", and \"Type of data (a)\" columns where present in each data frame. \n",
        "# If we need these columns at any point, we can append them back to our data frame as we will create a separate table with them for df1.  "
      ],
      "metadata": {
        "id": "5wwIS3bzNlQu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 433
        },
        "outputId": "85282faf-358d-467a-91f4-d4f0cc65d4e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "0          NaN                                                NaN   NaN   \n",
              "1          1.0                                              WORLD   NaN   \n",
              "2          2.0                                  Developed regions   (b)   \n",
              "3          3.0                                 Developing regions   (c)   \n",
              "4          4.0                          Least developed countries   (d)   \n",
              "\n",
              "   Country code Type of data (a)  \\\n",
              "0           NaN              NaN   \n",
              "1         900.0              NaN   \n",
              "2         901.0              NaN   \n",
              "3         902.0              NaN   \n",
              "4         941.0              NaN   \n",
              "\n",
              "  International migrant stock at mid-year (both sexes) Unnamed: 6 Unnamed: 7  \\\n",
              "0                                               1990         1995       2000   \n",
              "1                                          152563212    160801752  172703309   \n",
              "2                                           82378628     92306854  103375363   \n",
              "3                                           70184584     68494898   69327946   \n",
              "4                                           11075966     11711703   10077824   \n",
              "\n",
              "  Unnamed: 8  Unnamed: 9  ...  Unnamed: 13 Unnamed: 14 Unnamed: 15  \\\n",
              "0       2005        2010  ...         2000        2005        2010   \n",
              "1  191269100   221714243  ...     87884839    97866674   114613714   \n",
              "2  117181109   132560325  ...     50536796    57217777    64081077   \n",
              "3   74087991    89153918  ...     37348043    40648897    50532637   \n",
              "4    9809634    10018128  ...      5361902     5383009     5462714   \n",
              "\n",
              "  Unnamed: 16 International migrant stock at mid-year (female)  Unnamed: 18  \\\n",
              "0        2015                                             1990         1995   \n",
              "1   126115435                                         74815702     79064275   \n",
              "2    67618619                                         42115231     47214055   \n",
              "3    58496816                                         32700471     31850220   \n",
              "4     6463217                                          5236216      5573685   \n",
              "\n",
              "   Unnamed: 19 Unnamed: 20 Unnamed: 21 Unnamed: 22  \n",
              "0         2000        2005        2010        2015  \n",
              "1     84818470    93402426   107100529   117584801  \n",
              "2     52838567    59963332    68479248    72863336  \n",
              "3     31979903    33439094    38621281    44721465  \n",
              "4      4721920     4432371     4560536     5493028  \n",
              "\n",
              "[5 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-381c5ae7-4a90-4e34-bedc-33f1649199b9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "      <th>International migrant stock at mid-year (both sexes)</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>International migrant stock at mid-year (female)</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "      <th>Unnamed: 20</th>\n",
              "      <th>Unnamed: 21</th>\n",
              "      <th>Unnamed: 22</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>...</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>152563212</td>\n",
              "      <td>160801752</td>\n",
              "      <td>172703309</td>\n",
              "      <td>191269100</td>\n",
              "      <td>221714243</td>\n",
              "      <td>...</td>\n",
              "      <td>87884839</td>\n",
              "      <td>97866674</td>\n",
              "      <td>114613714</td>\n",
              "      <td>126115435</td>\n",
              "      <td>74815702</td>\n",
              "      <td>79064275</td>\n",
              "      <td>84818470</td>\n",
              "      <td>93402426</td>\n",
              "      <td>107100529</td>\n",
              "      <td>117584801</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>Developed regions</td>\n",
              "      <td>(b)</td>\n",
              "      <td>901.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>82378628</td>\n",
              "      <td>92306854</td>\n",
              "      <td>103375363</td>\n",
              "      <td>117181109</td>\n",
              "      <td>132560325</td>\n",
              "      <td>...</td>\n",
              "      <td>50536796</td>\n",
              "      <td>57217777</td>\n",
              "      <td>64081077</td>\n",
              "      <td>67618619</td>\n",
              "      <td>42115231</td>\n",
              "      <td>47214055</td>\n",
              "      <td>52838567</td>\n",
              "      <td>59963332</td>\n",
              "      <td>68479248</td>\n",
              "      <td>72863336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>Developing regions</td>\n",
              "      <td>(c)</td>\n",
              "      <td>902.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>70184584</td>\n",
              "      <td>68494898</td>\n",
              "      <td>69327946</td>\n",
              "      <td>74087991</td>\n",
              "      <td>89153918</td>\n",
              "      <td>...</td>\n",
              "      <td>37348043</td>\n",
              "      <td>40648897</td>\n",
              "      <td>50532637</td>\n",
              "      <td>58496816</td>\n",
              "      <td>32700471</td>\n",
              "      <td>31850220</td>\n",
              "      <td>31979903</td>\n",
              "      <td>33439094</td>\n",
              "      <td>38621281</td>\n",
              "      <td>44721465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>Least developed countries</td>\n",
              "      <td>(d)</td>\n",
              "      <td>941.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11075966</td>\n",
              "      <td>11711703</td>\n",
              "      <td>10077824</td>\n",
              "      <td>9809634</td>\n",
              "      <td>10018128</td>\n",
              "      <td>...</td>\n",
              "      <td>5361902</td>\n",
              "      <td>5383009</td>\n",
              "      <td>5462714</td>\n",
              "      <td>6463217</td>\n",
              "      <td>5236216</td>\n",
              "      <td>5573685</td>\n",
              "      <td>4721920</td>\n",
              "      <td>4432371</td>\n",
              "      <td>4560536</td>\n",
              "      <td>5493028</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-381c5ae7-4a90-4e34-bedc-33f1649199b9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-381c5ae7-4a90-4e34-bedc-33f1649199b9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-381c5ae7-4a90-4e34-bedc-33f1649199b9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 3 ###\n",
        "\n",
        "# We will first copy each data frame and make changes to the copy, so if needed, we can refer to the original data frame at any point.\n",
        "\n",
        "df1 = df1orig.copy(deep=True)\n",
        "df2 = df2orig.copy(deep=True)\n",
        "df3 = df3orig.copy(deep=True)\n",
        "df4 = df4orig.copy(deep=True)\n",
        "df5 = df5orig.copy(deep=True)\n",
        "df6 = df6orig.copy(deep=True)"
      ],
      "metadata": {
        "id": "Xfv2UW6-h1tI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 4 ###\n",
        "\n",
        "# Remove the \"Major area, region, country or area of destination\", \"Notes\", \"Country code\", and \"Type of data (a)\" columns where present in each data frame, except for df1.\n",
        "\n",
        "df2.drop(columns=['Major area, region, country or area of destination','Notes','Country code'], inplace=True)\n",
        "df3.drop(columns=['Major area, region, country or area of destination','Notes','Country code','Type of data (a)'], inplace=True)\n",
        "df4.drop(columns=['Major area, region, country or area of destination','Notes','Country code','Type of data (a)'], inplace=True)\n",
        "df5.drop(columns=['Major area, region, country or area of destination','Notes','Country code','Type of data (a)'], inplace=True)\n",
        "df6.drop(columns=['Major area, region, country or area of destination','Notes','Country code','Type of data (a)'], inplace=True)"
      ],
      "metadata": {
        "id": "xnfAT4Cfiev9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 5 ###\n",
        "\n",
        "# Working on df1.\n",
        "# Start by assigning column names to all the migrant stock/sex columns, and abbreviate the sex to an initial to simplify splitting of the variable name later.\n",
        "\n",
        "for i in range(5,23): # This is the range of stock/sex columns.\n",
        "\n",
        "  if i in range(5,11):\n",
        "    df1.columns.values[i] = \"B\" # B for both sexes.\n",
        "  elif i in range (11,17):\n",
        "    df1.columns.values[i] = \"M\" # M for male.\n",
        "  else:\n",
        "    df1.columns.values[i] = \"F\" # F for female."
      ],
      "metadata": {
        "id": "70Jexd6Wz3VF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 6 ###\n",
        "\n",
        "# Bring up the year data from the second header row and append it with the sex to enable deletion of the year row later.\n",
        "\n",
        "for j in range(5,23):\n",
        "\n",
        "  if j in [5,11,17]: # Corresponds to columns with year value 1990 and so on for each year below.\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"1990\"\n",
        "  elif j in [6,12,18]:\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"1995\"\n",
        "  elif j in [7,13,19]:\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"2000\"\n",
        "  elif j in [8,14,20]:\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"2005\"\n",
        "  elif j in [9,15,21]:\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"2010\"\n",
        "  else:\n",
        "    df1.columns.values[j] = df1.columns.values[j] + \"2015\""
      ],
      "metadata": {
        "id": "86_t3FhSyFQF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 7 ###\n",
        "\n",
        "# Confirm that the variable names appear as desired, i.e., \"Sex + Year\", and that they correspond to the correct sex and year columns.\n",
        "\n",
        "df1.head(2)"
      ],
      "metadata": {
        "id": "D9llEFVbyatF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "outputId": "2cc2967f-4ba2-4900-810c-9e31c1c6b868"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "0          NaN                                                NaN   NaN   \n",
              "1          1.0                                              WORLD   NaN   \n",
              "\n",
              "   Country code Type of data (a)      B1990      B1995      B2000      B2005  \\\n",
              "0           NaN              NaN       1990       1995       2000       2005   \n",
              "1         900.0              NaN  152563212  160801752  172703309  191269100   \n",
              "\n",
              "       B2010  ...     M2000     M2005      M2010      M2015     F1990  \\\n",
              "0       2010  ...      2000      2005       2010       2015      1990   \n",
              "1  221714243  ...  87884839  97866674  114613714  126115435  74815702   \n",
              "\n",
              "      F1995     F2000     F2005      F2010      F2015  \n",
              "0      1995      2000      2005       2010       2015  \n",
              "1  79064275  84818470  93402426  107100529  117584801  \n",
              "\n",
              "[2 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b1428997-e594-4f7b-be95-c2097ef922e6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "      <th>B1990</th>\n",
              "      <th>B1995</th>\n",
              "      <th>B2000</th>\n",
              "      <th>B2005</th>\n",
              "      <th>B2010</th>\n",
              "      <th>...</th>\n",
              "      <th>M2000</th>\n",
              "      <th>M2005</th>\n",
              "      <th>M2010</th>\n",
              "      <th>M2015</th>\n",
              "      <th>F1990</th>\n",
              "      <th>F1995</th>\n",
              "      <th>F2000</th>\n",
              "      <th>F2005</th>\n",
              "      <th>F2010</th>\n",
              "      <th>F2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>...</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>152563212</td>\n",
              "      <td>160801752</td>\n",
              "      <td>172703309</td>\n",
              "      <td>191269100</td>\n",
              "      <td>221714243</td>\n",
              "      <td>...</td>\n",
              "      <td>87884839</td>\n",
              "      <td>97866674</td>\n",
              "      <td>114613714</td>\n",
              "      <td>126115435</td>\n",
              "      <td>74815702</td>\n",
              "      <td>79064275</td>\n",
              "      <td>84818470</td>\n",
              "      <td>93402426</td>\n",
              "      <td>107100529</td>\n",
              "      <td>117584801</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1428997-e594-4f7b-be95-c2097ef922e6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b1428997-e594-4f7b-be95-c2097ef922e6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b1428997-e594-4f7b-be95-c2097ef922e6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 8 ###\n",
        "\n",
        "# Remove the second header row with the year information as that data is now included in the first header row.\n",
        "\n",
        "df1.drop([0],inplace=True)\n",
        "df1.head(2) # Confirm that the row was removed."
      ],
      "metadata": {
        "id": "9tHEEub3bkle",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        },
        "outputId": "5129bff6-d547-4eb3-83b3-75e88b219963"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "1          1.0                                              WORLD   NaN   \n",
              "2          2.0                                  Developed regions   (b)   \n",
              "\n",
              "   Country code Type of data (a)      B1990      B1995      B2000      B2005  \\\n",
              "1         900.0              NaN  152563212  160801752  172703309  191269100   \n",
              "2         901.0              NaN   82378628   92306854  103375363  117181109   \n",
              "\n",
              "       B2010  ...     M2000     M2005      M2010      M2015     F1990  \\\n",
              "1  221714243  ...  87884839  97866674  114613714  126115435  74815702   \n",
              "2  132560325  ...  50536796  57217777   64081077   67618619  42115231   \n",
              "\n",
              "      F1995     F2000     F2005      F2010      F2015  \n",
              "1  79064275  84818470  93402426  107100529  117584801  \n",
              "2  47214055  52838567  59963332   68479248   72863336  \n",
              "\n",
              "[2 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ed54fcd-d1b5-4fe2-a6df-8fcf7195f6d1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "      <th>B1990</th>\n",
              "      <th>B1995</th>\n",
              "      <th>B2000</th>\n",
              "      <th>B2005</th>\n",
              "      <th>B2010</th>\n",
              "      <th>...</th>\n",
              "      <th>M2000</th>\n",
              "      <th>M2005</th>\n",
              "      <th>M2010</th>\n",
              "      <th>M2015</th>\n",
              "      <th>F1990</th>\n",
              "      <th>F1995</th>\n",
              "      <th>F2000</th>\n",
              "      <th>F2005</th>\n",
              "      <th>F2010</th>\n",
              "      <th>F2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>152563212</td>\n",
              "      <td>160801752</td>\n",
              "      <td>172703309</td>\n",
              "      <td>191269100</td>\n",
              "      <td>221714243</td>\n",
              "      <td>...</td>\n",
              "      <td>87884839</td>\n",
              "      <td>97866674</td>\n",
              "      <td>114613714</td>\n",
              "      <td>126115435</td>\n",
              "      <td>74815702</td>\n",
              "      <td>79064275</td>\n",
              "      <td>84818470</td>\n",
              "      <td>93402426</td>\n",
              "      <td>107100529</td>\n",
              "      <td>117584801</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>Developed regions</td>\n",
              "      <td>(b)</td>\n",
              "      <td>901.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>82378628</td>\n",
              "      <td>92306854</td>\n",
              "      <td>103375363</td>\n",
              "      <td>117181109</td>\n",
              "      <td>132560325</td>\n",
              "      <td>...</td>\n",
              "      <td>50536796</td>\n",
              "      <td>57217777</td>\n",
              "      <td>64081077</td>\n",
              "      <td>67618619</td>\n",
              "      <td>42115231</td>\n",
              "      <td>47214055</td>\n",
              "      <td>52838567</td>\n",
              "      <td>59963332</td>\n",
              "      <td>68479248</td>\n",
              "      <td>72863336</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ed54fcd-d1b5-4fe2-a6df-8fcf7195f6d1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2ed54fcd-d1b5-4fe2-a6df-8fcf7195f6d1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2ed54fcd-d1b5-4fe2-a6df-8fcf7195f6d1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 9 ###\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column. \n",
        "\n",
        "df1 = df1.melt(id_vars = ['Sort\\norder', 'Major area, region, country or area of destination','Notes','Country code','Type of data (a)'], var_name = \"sex_yr\", value_name = \"International migrant stock at mid-year\")\n",
        "df1.head() # Confirm that the values were pivoted."
      ],
      "metadata": {
        "id": "1Hf7QM49bq3r",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "19dafad6-9ebc-4275-bd23-a49f273af6c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "0          1.0                                              WORLD   NaN   \n",
              "1          2.0                                  Developed regions   (b)   \n",
              "2          3.0                                 Developing regions   (c)   \n",
              "3          4.0                          Least developed countries   (d)   \n",
              "4          5.0  Less developed regions excluding least develop...   NaN   \n",
              "\n",
              "   Country code Type of data (a) sex_yr  \\\n",
              "0         900.0              NaN  B1990   \n",
              "1         901.0              NaN  B1990   \n",
              "2         902.0              NaN  B1990   \n",
              "3         941.0              NaN  B1990   \n",
              "4         934.0              NaN  B1990   \n",
              "\n",
              "  International migrant stock at mid-year  \n",
              "0                               152563212  \n",
              "1                                82378628  \n",
              "2                                70184584  \n",
              "3                                11075966  \n",
              "4                                59105261  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8455893-4c31-4c7d-99cf-cc3dbb1e6357\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "      <th>sex_yr</th>\n",
              "      <th>International migrant stock at mid-year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B1990</td>\n",
              "      <td>152563212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>Developed regions</td>\n",
              "      <td>(b)</td>\n",
              "      <td>901.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B1990</td>\n",
              "      <td>82378628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>Developing regions</td>\n",
              "      <td>(c)</td>\n",
              "      <td>902.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B1990</td>\n",
              "      <td>70184584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>Least developed countries</td>\n",
              "      <td>(d)</td>\n",
              "      <td>941.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B1990</td>\n",
              "      <td>11075966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>Less developed regions excluding least develop...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>934.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B1990</td>\n",
              "      <td>59105261</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8455893-4c31-4c7d-99cf-cc3dbb1e6357')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b8455893-4c31-4c7d-99cf-cc3dbb1e6357 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b8455893-4c31-4c7d-99cf-cc3dbb1e6357');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 10 ###\n",
        "\n",
        "# Split sex and year into two variables and columns using the lambda function, also enabling each observation to form a row.\n",
        "\n",
        "df1 = df1.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Year = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) \n",
        "df1.head() # Confirm that the variable was split as desired."
      ],
      "metadata": {
        "id": "GcTbi-A-cIXA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "1bb13dc7-b29c-491d-c275-33669c1183ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "0          1.0                                              WORLD   NaN   \n",
              "1          2.0                                  Developed regions   (b)   \n",
              "2          3.0                                 Developing regions   (c)   \n",
              "3          4.0                          Least developed countries   (d)   \n",
              "4          5.0  Less developed regions excluding least develop...   NaN   \n",
              "\n",
              "   Country code Type of data (a) International migrant stock at mid-year Sex  \\\n",
              "0         900.0              NaN                               152563212   B   \n",
              "1         901.0              NaN                                82378628   B   \n",
              "2         902.0              NaN                                70184584   B   \n",
              "3         941.0              NaN                                11075966   B   \n",
              "4         934.0              NaN                                59105261   B   \n",
              "\n",
              "   Year  \n",
              "0  1990  \n",
              "1  1990  \n",
              "2  1990  \n",
              "3  1990  \n",
              "4  1990  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9be2c8ea-b3b7-4575-9b23-f66438071509\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "      <th>International migrant stock at mid-year</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>152563212</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>Developed regions</td>\n",
              "      <td>(b)</td>\n",
              "      <td>901.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>82378628</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>Developing regions</td>\n",
              "      <td>(c)</td>\n",
              "      <td>902.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>70184584</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>Least developed countries</td>\n",
              "      <td>(d)</td>\n",
              "      <td>941.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11075966</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>Less developed regions excluding least develop...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>934.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>59105261</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9be2c8ea-b3b7-4575-9b23-f66438071509')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9be2c8ea-b3b7-4575-9b23-f66438071509 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9be2c8ea-b3b7-4575-9b23-f66438071509');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 11a ###\n",
        "\n",
        "# We will create two tables so that a single observational unit is in one table.\n",
        "# Table 1 will contain area/region/country with details of each area.\n",
        "# Table 2 will contain the rest of the sex, year, and migrant stock data.\n",
        "\n",
        "table1 = df1.iloc[:,:-3] # Remove the last three columns.\n",
        "table2 = df1.iloc[:,[0,5,6,7]] # Keep the first column as the unique id, and the last three columns."
      ],
      "metadata": {
        "id": "wzrZR6Mhmkeg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 11b ###\n",
        "\n",
        "# Confirm that the table was split as desired, and that it is tidy. Look at header and tail data.\n",
        "\n",
        "table1"
      ],
      "metadata": {
        "id": "mAfYwWRZ1lWA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "d2a78798-aa8e-417d-8a5f-0b2176640770"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder Major area, region, country or area of destination Notes  \\\n",
              "0             1.0                                              WORLD   NaN   \n",
              "1             2.0                                  Developed regions   (b)   \n",
              "2             3.0                                 Developing regions   (c)   \n",
              "3             4.0                          Least developed countries   (d)   \n",
              "4             5.0  Less developed regions excluding least develop...   NaN   \n",
              "...           ...                                                ...   ...   \n",
              "4765        261.0                                              Samoa   NaN   \n",
              "4766        262.0                                            Tokelau   NaN   \n",
              "4767        263.0                                              Tonga   NaN   \n",
              "4768        264.0                                             Tuvalu   NaN   \n",
              "4769        265.0                          Wallis and Futuna Islands   NaN   \n",
              "\n",
              "      Country code Type of data (a)  \n",
              "0            900.0              NaN  \n",
              "1            901.0              NaN  \n",
              "2            902.0              NaN  \n",
              "3            941.0              NaN  \n",
              "4            934.0              NaN  \n",
              "...            ...              ...  \n",
              "4765         882.0                B  \n",
              "4766         772.0                B  \n",
              "4767         776.0                B  \n",
              "4768         798.0                C  \n",
              "4769         876.0                B  \n",
              "\n",
              "[4770 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d414d34f-40ee-477c-95d3-cf478bd46966\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Major area, region, country or area of destination</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Country code</th>\n",
              "      <th>Type of data (a)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>WORLD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>900.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>Developed regions</td>\n",
              "      <td>(b)</td>\n",
              "      <td>901.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>Developing regions</td>\n",
              "      <td>(c)</td>\n",
              "      <td>902.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>Least developed countries</td>\n",
              "      <td>(d)</td>\n",
              "      <td>941.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>Less developed regions excluding least develop...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>934.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4765</th>\n",
              "      <td>261.0</td>\n",
              "      <td>Samoa</td>\n",
              "      <td>NaN</td>\n",
              "      <td>882.0</td>\n",
              "      <td>B</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4766</th>\n",
              "      <td>262.0</td>\n",
              "      <td>Tokelau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>772.0</td>\n",
              "      <td>B</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4767</th>\n",
              "      <td>263.0</td>\n",
              "      <td>Tonga</td>\n",
              "      <td>NaN</td>\n",
              "      <td>776.0</td>\n",
              "      <td>B</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4768</th>\n",
              "      <td>264.0</td>\n",
              "      <td>Tuvalu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>798.0</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4769</th>\n",
              "      <td>265.0</td>\n",
              "      <td>Wallis and Futuna Islands</td>\n",
              "      <td>NaN</td>\n",
              "      <td>876.0</td>\n",
              "      <td>B</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4770 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d414d34f-40ee-477c-95d3-cf478bd46966')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d414d34f-40ee-477c-95d3-cf478bd46966 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d414d34f-40ee-477c-95d3-cf478bd46966');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 11c ###\n",
        "\n",
        "# Confirm that the table was split as desired, and that it is tidy. Look at header and tail data. \n",
        "\n",
        "table2"
      ],
      "metadata": {
        "id": "uzX3f2cE2f9a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "0eff9e0d-3439-4d6b-e987-e89c7f677e72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder International migrant stock at mid-year Sex  Year\n",
              "0             1.0                               152563212   B  1990\n",
              "1             2.0                                82378628   B  1990\n",
              "2             3.0                                70184584   B  1990\n",
              "3             4.0                                11075966   B  1990\n",
              "4             5.0                                59105261   B  1990\n",
              "...           ...                                     ...  ..   ...\n",
              "4765        261.0                                    2460   F  2015\n",
              "4766        262.0                                     254   F  2015\n",
              "4767        263.0                                    2604   F  2015\n",
              "4768        264.0                                      63   F  2015\n",
              "4769        265.0                                    1411   F  2015\n",
              "\n",
              "[4770 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d10039f8-c323-4dd6-adb4-5f32b191b267\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>International migrant stock at mid-year</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>152563212</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>82378628</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>70184584</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>11075966</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>59105261</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4765</th>\n",
              "      <td>261.0</td>\n",
              "      <td>2460</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4766</th>\n",
              "      <td>262.0</td>\n",
              "      <td>254</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4767</th>\n",
              "      <td>263.0</td>\n",
              "      <td>2604</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4768</th>\n",
              "      <td>264.0</td>\n",
              "      <td>63</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4769</th>\n",
              "      <td>265.0</td>\n",
              "      <td>1411</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4770 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d10039f8-c323-4dd6-adb4-5f32b191b267')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d10039f8-c323-4dd6-adb4-5f32b191b267 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d10039f8-c323-4dd6-adb4-5f32b191b267');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 12a ###\n",
        "\n",
        "# We will now examine df2 to ensure that the columns outlined above were removed and for violations of tidy data principles.\n",
        "\n",
        "df2.head()\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that df2 is similar to df1, except for the columns that were deleted and table header titles. \n",
        "# However, because of the columns that were deleted in df2, there is a single observational unit in the table, so we will not need to split the table in 2 as in step 11a. \n",
        "\n",
        "# VIOLATIONS:\n",
        "# df2 violates the same tidy data principles detailed above for df1 in step 2 with the exception of the multiple obervational units in one table.\n",
        "\n",
        "# PLAN: \n",
        "# We will apply the same rules and code from df1 to tidy df2 with the exception of the table splitting in step 11a. "
      ],
      "metadata": {
        "id": "0TJAStXL2vVC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 353
        },
        "outputId": "9e99d28e-50ce-4cb4-c426-1dcd356f775c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder  Total population of both sexes at mid-year (thousands)  \\\n",
              "0          NaN                                           1990.000        \n",
              "1          1.0                                        5309667.699        \n",
              "2          2.0                                        1144463.062        \n",
              "3          3.0                                        4165204.637        \n",
              "4          4.0                                         510057.629        \n",
              "\n",
              "    Unnamed: 5   Unnamed: 6   Unnamed: 7   Unnamed: 8   Unnamed: 9  \\\n",
              "0     1995.000     2000.000     2005.000     2010.000     2015.000   \n",
              "1  5735123.084  6126622.121  6519635.850  6929725.043  7349472.099   \n",
              "2  1169761.211  1188811.731  1208919.509  1233375.711  1251351.086   \n",
              "3  4565361.873  4937810.390  5310716.341  5696349.332  6098121.013   \n",
              "4   585189.354   664386.087   752804.951   847254.847   954157.804   \n",
              "\n",
              "  Total male population at mid-year (thousands)  Unnamed: 11  Unnamed: 12  \\\n",
              "0                                          1990         1995         2000   \n",
              "1                                   2670423.701  2886635.893  3084537.662   \n",
              "2                                    555255.626   568268.456   578010.218   \n",
              "3                                   2115168.075  2318367.437  2506527.444   \n",
              "4                                    254042.556   292026.742   331482.475   \n",
              "\n",
              "   Unnamed: 13  Unnamed: 14  Unnamed: 15  \\\n",
              "0         2005         2010         2015   \n",
              "1  3285082.249  3493956.904  3707205.753   \n",
              "2   587962.213   599955.476   609297.148   \n",
              "3  2697120.036  2894001.428  3097908.605   \n",
              "4   375757.715   422397.532   476031.179   \n",
              "\n",
              "  Total female population at mid-year (thousands)  Unnamed: 17  Unnamed: 18  \\\n",
              "0                                            1990         1995         2000   \n",
              "1                                     2639243.998  2848487.191  3042084.459   \n",
              "2                                      589207.436   601492.755   610801.513   \n",
              "3                                     2050036.562  2246994.436  2431282.946   \n",
              "4                                      256015.073   293162.612   332903.612   \n",
              "\n",
              "   Unnamed: 19  Unnamed: 20  Unnamed: 21  \n",
              "0         2005         2010         2015  \n",
              "1  3234553.601  3435768.139  3642266.346  \n",
              "2   620957.296   633420.235   642053.938  \n",
              "3  2613596.305  2802347.904  3000212.408  \n",
              "4   377047.236   424857.315   478126.625  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-56a6c7b9-21d6-416f-973f-22a302263143\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Total population of both sexes at mid-year (thousands)</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Total male population at mid-year (thousands)</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Total female population at mid-year (thousands)</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "      <th>Unnamed: 20</th>\n",
              "      <th>Unnamed: 21</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990.000</td>\n",
              "      <td>1995.000</td>\n",
              "      <td>2000.000</td>\n",
              "      <td>2005.000</td>\n",
              "      <td>2010.000</td>\n",
              "      <td>2015.000</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5309667.699</td>\n",
              "      <td>5735123.084</td>\n",
              "      <td>6126622.121</td>\n",
              "      <td>6519635.850</td>\n",
              "      <td>6929725.043</td>\n",
              "      <td>7349472.099</td>\n",
              "      <td>2670423.701</td>\n",
              "      <td>2886635.893</td>\n",
              "      <td>3084537.662</td>\n",
              "      <td>3285082.249</td>\n",
              "      <td>3493956.904</td>\n",
              "      <td>3707205.753</td>\n",
              "      <td>2639243.998</td>\n",
              "      <td>2848487.191</td>\n",
              "      <td>3042084.459</td>\n",
              "      <td>3234553.601</td>\n",
              "      <td>3435768.139</td>\n",
              "      <td>3642266.346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>1144463.062</td>\n",
              "      <td>1169761.211</td>\n",
              "      <td>1188811.731</td>\n",
              "      <td>1208919.509</td>\n",
              "      <td>1233375.711</td>\n",
              "      <td>1251351.086</td>\n",
              "      <td>555255.626</td>\n",
              "      <td>568268.456</td>\n",
              "      <td>578010.218</td>\n",
              "      <td>587962.213</td>\n",
              "      <td>599955.476</td>\n",
              "      <td>609297.148</td>\n",
              "      <td>589207.436</td>\n",
              "      <td>601492.755</td>\n",
              "      <td>610801.513</td>\n",
              "      <td>620957.296</td>\n",
              "      <td>633420.235</td>\n",
              "      <td>642053.938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>4165204.637</td>\n",
              "      <td>4565361.873</td>\n",
              "      <td>4937810.390</td>\n",
              "      <td>5310716.341</td>\n",
              "      <td>5696349.332</td>\n",
              "      <td>6098121.013</td>\n",
              "      <td>2115168.075</td>\n",
              "      <td>2318367.437</td>\n",
              "      <td>2506527.444</td>\n",
              "      <td>2697120.036</td>\n",
              "      <td>2894001.428</td>\n",
              "      <td>3097908.605</td>\n",
              "      <td>2050036.562</td>\n",
              "      <td>2246994.436</td>\n",
              "      <td>2431282.946</td>\n",
              "      <td>2613596.305</td>\n",
              "      <td>2802347.904</td>\n",
              "      <td>3000212.408</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>510057.629</td>\n",
              "      <td>585189.354</td>\n",
              "      <td>664386.087</td>\n",
              "      <td>752804.951</td>\n",
              "      <td>847254.847</td>\n",
              "      <td>954157.804</td>\n",
              "      <td>254042.556</td>\n",
              "      <td>292026.742</td>\n",
              "      <td>331482.475</td>\n",
              "      <td>375757.715</td>\n",
              "      <td>422397.532</td>\n",
              "      <td>476031.179</td>\n",
              "      <td>256015.073</td>\n",
              "      <td>293162.612</td>\n",
              "      <td>332903.612</td>\n",
              "      <td>377047.236</td>\n",
              "      <td>424857.315</td>\n",
              "      <td>478126.625</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56a6c7b9-21d6-416f-973f-22a302263143')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-56a6c7b9-21d6-416f-973f-22a302263143 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-56a6c7b9-21d6-416f-973f-22a302263143');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 12b ###\n",
        "\n",
        "# Working on df2.\n",
        "\n",
        "# Assign column names to all migrant stock/sex columns as in step 5.\n",
        "for i in range(1,19): # Adjust range for df2.\n",
        "\n",
        "  if i in range(1,7):\n",
        "    df2.columns.values[i] = \"B\" \n",
        "  elif i in range (7,13):\n",
        "    df2.columns.values[i] = \"M\"\n",
        "  else:\n",
        "    df2.columns.values[i] = \"F\"\n",
        "\n",
        "# Append sex and year data as in step 6.\n",
        "for j in range(1,19): # Adjust range for df2.\n",
        "\n",
        "  if j in [1,7,13]:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"1990\"\n",
        "  elif j in [2,8,14]:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"1995\"\n",
        "  elif j in [3,9,15]:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"2000\"\n",
        "  elif j in [4,10,16]:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"2005\"\n",
        "  elif j in [5,11,17]:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"2010\"\n",
        "  else:\n",
        "    df2.columns.values[j] = df2.columns.values[j] + \"2015\"\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df2.drop([0],inplace=True)\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column as in step 9. \n",
        "df2 = df2.melt(id_vars = ['Sort\\norder'], var_name = \"sex_yr\", value_name = \"Total population at mid-year (thousands)\") # Adjust column and value names for df2.\n",
        "\n",
        "# Split sex and year into two variables and columns as in step 10.\n",
        "df2 = df2.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Year = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) \n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df2"
      ],
      "metadata": {
        "id": "B_vZq22x3af9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "680b45a3-820e-44a1-8579-fdfb418aded0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder Total population at mid-year (thousands) Sex  Year\n",
              "0             1.0                              5309667.699   B  1990\n",
              "1             2.0                              1144463.062   B  1990\n",
              "2             3.0                              4165204.637   B  1990\n",
              "3             4.0                               510057.629   B  1990\n",
              "4             5.0                              3655147.008   B  1990\n",
              "...           ...                                      ...  ..   ...\n",
              "4765        261.0                                   93.584   F  2015\n",
              "4766        262.0                                       ..   F  2015\n",
              "4767        263.0                                   52.931   F  2015\n",
              "4768        264.0                                       ..   F  2015\n",
              "4769        265.0                                       ..   F  2015\n",
              "\n",
              "[4770 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e27c1c32-9247-459f-9d9d-65369d0e5bfb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Total population at mid-year (thousands)</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5309667.699</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>1144463.062</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>4165204.637</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>510057.629</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3655147.008</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4765</th>\n",
              "      <td>261.0</td>\n",
              "      <td>93.584</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4766</th>\n",
              "      <td>262.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4767</th>\n",
              "      <td>263.0</td>\n",
              "      <td>52.931</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4768</th>\n",
              "      <td>264.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4769</th>\n",
              "      <td>265.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4770 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e27c1c32-9247-459f-9d9d-65369d0e5bfb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e27c1c32-9247-459f-9d9d-65369d0e5bfb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e27c1c32-9247-459f-9d9d-65369d0e5bfb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 13a ###\n",
        "\n",
        "# We will now examine df3 to ensure that the columns outlined above were removed and for violations of tidy data principles.\n",
        "\n",
        "df3.head()\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that df3 is almost identical to df1, with the exception of the columns that were deleted and table header titles. \n",
        "# However, because of the columns that were deleted in df3, there is a single observational unit in the table, so we will not need to split the table in 2 as in step 11a. \n",
        "\n",
        "# VIOLATIONS:\n",
        "# df3 violates the same tidy data principles detailed above for df1 in step 2 with the exception of the multiple obervational units in one table.\n",
        "\n",
        "# PLAN: \n",
        "# We will apply the same rules and code from df1 to tidy df3 with the exception of the table splitting in step 11a. "
      ],
      "metadata": {
        "id": "PVmT2udWeAnU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "outputId": "e8ad664f-a0b7-4a79-8aed-97b6ca77845b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder  \\\n",
              "0          NaN   \n",
              "1          1.0   \n",
              "2          2.0   \n",
              "3          3.0   \n",
              "4          4.0   \n",
              "\n",
              "  International migrant stock as a percentage of the total population (both sexes)  \\\n",
              "0                                               1990                                 \n",
              "1                                            2.87331                                 \n",
              "2                                           7.198015                                 \n",
              "3                                           1.685021                                 \n",
              "4                                           2.171513                                 \n",
              "\n",
              "  Unnamed: 6 Unnamed: 7 Unnamed: 8   Unnamed: 9  Unnamed: 10  \\\n",
              "0       1995       2000       2005  2010.000000  2015.000000   \n",
              "1   2.803806   2.818899   2.933739     3.199467     3.315888   \n",
              "2   7.891085   8.695688   9.693045    10.747765    11.226422   \n",
              "3   1.500317   1.404022   1.395066     1.565106     1.692624   \n",
              "4   2.001353   1.516863   1.303078     1.182422     1.252551   \n",
              "\n",
              "  International migrant stock as a percentage of the total population (male)  \\\n",
              "0                                               1990                           \n",
              "1                                            2.91143                           \n",
              "2                                           7.251326                           \n",
              "3                                           1.772158                           \n",
              "4                                            2.30005                           \n",
              "\n",
              "  Unnamed: 12 Unnamed: 13 Unnamed: 14 Unnamed: 15 Unnamed: 16  \\\n",
              "0        1995        2000        2005        2010        2015   \n",
              "1    2.831583    2.849206    2.979124    3.280341      3.4019   \n",
              "2    7.935123    8.743236     9.73154   10.680972   11.097807   \n",
              "3    1.580624    1.490031    1.507122    1.746117    1.888268   \n",
              "4    2.103476    1.617552    1.432574    1.293264     1.35773   \n",
              "\n",
              "  International migrant stock as a percentage of the total population (female)  \\\n",
              "0                                               1990                             \n",
              "1                                            2.83474                             \n",
              "2                                           7.147777                             \n",
              "3                                           1.595116                             \n",
              "4                                           2.045276                             \n",
              "\n",
              "  Unnamed: 18 Unnamed: 19 Unnamed: 20 Unnamed: 21 Unnamed: 22  \n",
              "0        1995        2000        2005        2010        2015  \n",
              "1    2.775658    2.788169    2.887645    3.117222    3.228342  \n",
              "2     7.84948    8.650694    9.656595   10.811029   11.348476  \n",
              "3    1.417459    1.315351    1.279428    1.378176     1.49061  \n",
              "4    1.901226    1.418405    1.175548    1.073428    1.148865  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f0fea984-62f4-4f46-bbfd-06724b87a485\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>International migrant stock as a percentage of the total population (both sexes)</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "      <th>International migrant stock as a percentage of the total population (male)</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>International migrant stock as a percentage of the total population (female)</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "      <th>Unnamed: 20</th>\n",
              "      <th>Unnamed: 21</th>\n",
              "      <th>Unnamed: 22</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>2.87331</td>\n",
              "      <td>2.803806</td>\n",
              "      <td>2.818899</td>\n",
              "      <td>2.933739</td>\n",
              "      <td>3.199467</td>\n",
              "      <td>3.315888</td>\n",
              "      <td>2.91143</td>\n",
              "      <td>2.831583</td>\n",
              "      <td>2.849206</td>\n",
              "      <td>2.979124</td>\n",
              "      <td>3.280341</td>\n",
              "      <td>3.4019</td>\n",
              "      <td>2.83474</td>\n",
              "      <td>2.775658</td>\n",
              "      <td>2.788169</td>\n",
              "      <td>2.887645</td>\n",
              "      <td>3.117222</td>\n",
              "      <td>3.228342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>7.198015</td>\n",
              "      <td>7.891085</td>\n",
              "      <td>8.695688</td>\n",
              "      <td>9.693045</td>\n",
              "      <td>10.747765</td>\n",
              "      <td>11.226422</td>\n",
              "      <td>7.251326</td>\n",
              "      <td>7.935123</td>\n",
              "      <td>8.743236</td>\n",
              "      <td>9.73154</td>\n",
              "      <td>10.680972</td>\n",
              "      <td>11.097807</td>\n",
              "      <td>7.147777</td>\n",
              "      <td>7.84948</td>\n",
              "      <td>8.650694</td>\n",
              "      <td>9.656595</td>\n",
              "      <td>10.811029</td>\n",
              "      <td>11.348476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>1.685021</td>\n",
              "      <td>1.500317</td>\n",
              "      <td>1.404022</td>\n",
              "      <td>1.395066</td>\n",
              "      <td>1.565106</td>\n",
              "      <td>1.692624</td>\n",
              "      <td>1.772158</td>\n",
              "      <td>1.580624</td>\n",
              "      <td>1.490031</td>\n",
              "      <td>1.507122</td>\n",
              "      <td>1.746117</td>\n",
              "      <td>1.888268</td>\n",
              "      <td>1.595116</td>\n",
              "      <td>1.417459</td>\n",
              "      <td>1.315351</td>\n",
              "      <td>1.279428</td>\n",
              "      <td>1.378176</td>\n",
              "      <td>1.49061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>2.171513</td>\n",
              "      <td>2.001353</td>\n",
              "      <td>1.516863</td>\n",
              "      <td>1.303078</td>\n",
              "      <td>1.182422</td>\n",
              "      <td>1.252551</td>\n",
              "      <td>2.30005</td>\n",
              "      <td>2.103476</td>\n",
              "      <td>1.617552</td>\n",
              "      <td>1.432574</td>\n",
              "      <td>1.293264</td>\n",
              "      <td>1.35773</td>\n",
              "      <td>2.045276</td>\n",
              "      <td>1.901226</td>\n",
              "      <td>1.418405</td>\n",
              "      <td>1.175548</td>\n",
              "      <td>1.073428</td>\n",
              "      <td>1.148865</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0fea984-62f4-4f46-bbfd-06724b87a485')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f0fea984-62f4-4f46-bbfd-06724b87a485 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f0fea984-62f4-4f46-bbfd-06724b87a485');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 13b ###\n",
        "\n",
        "# Working on df3.\n",
        "\n",
        "# Assign column names to all migrant stock/sex columns as in step 5.\n",
        "for i in range(1,19): # Adjust range for df3.\n",
        "\n",
        "  if i in range(1,7):\n",
        "    df3.columns.values[i] = \"B\" \n",
        "  elif i in range (7,13):\n",
        "    df3.columns.values[i] = \"M\"\n",
        "  else:\n",
        "    df3.columns.values[i] = \"F\"\n",
        "\n",
        "# Append sex and year data as in step 6.\n",
        "for j in range(1,19): # Adjust range for df3.\n",
        "\n",
        "  if j in [1,7,13]:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"1990\"\n",
        "  elif j in [2,8,14]:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"1995\"\n",
        "  elif j in [3,9,15]:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"2000\"\n",
        "  elif j in [4,10,16]:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"2005\"\n",
        "  elif j in [5,11,17]:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"2010\"\n",
        "  else:\n",
        "    df3.columns.values[j] = df3.columns.values[j] + \"2015\"\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df3.drop([0],inplace=True)\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column as in step 9. \n",
        "df3 = df3.melt(id_vars = ['Sort\\norder'], var_name = \"sex_yr\", value_name = \"International migrant stock as a percentage of total population\") # Adjust column and value names for df3.\n",
        "\n",
        "# Split sex and year into two variables and columns as in step 10.\n",
        "df3 = df3.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Year = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) \n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df3"
      ],
      "metadata": {
        "id": "gKtJoOnDhZV5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "6ed916ec-857c-44f6-b06a-eceda4cefd1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder  \\\n",
              "0             1.0   \n",
              "1             2.0   \n",
              "2             3.0   \n",
              "3             4.0   \n",
              "4             5.0   \n",
              "...           ...   \n",
              "4765        261.0   \n",
              "4766        262.0   \n",
              "4767        263.0   \n",
              "4768        264.0   \n",
              "4769        265.0   \n",
              "\n",
              "     International migrant stock as a percentage of total population Sex  Year  \n",
              "0                                               2.87331                B  1990  \n",
              "1                                              7.198015                B  1990  \n",
              "2                                              1.685021                B  1990  \n",
              "3                                              2.171513                B  1990  \n",
              "4                                              1.617042                B  1990  \n",
              "...                                                 ...               ..   ...  \n",
              "4765                                           2.628654                F  2015  \n",
              "4766                                                 ..                F  2015  \n",
              "4767                                           4.919612                F  2015  \n",
              "4768                                                 ..                F  2015  \n",
              "4769                                                 ..                F  2015  \n",
              "\n",
              "[4770 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-47acdca4-f2e4-49db-ba99-4cd86c3d824d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>International migrant stock as a percentage of total population</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>2.87331</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>7.198015</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>1.685021</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>2.171513</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>1.617042</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4765</th>\n",
              "      <td>261.0</td>\n",
              "      <td>2.628654</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4766</th>\n",
              "      <td>262.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4767</th>\n",
              "      <td>263.0</td>\n",
              "      <td>4.919612</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4768</th>\n",
              "      <td>264.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4769</th>\n",
              "      <td>265.0</td>\n",
              "      <td>..</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4770 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47acdca4-f2e4-49db-ba99-4cd86c3d824d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-47acdca4-f2e4-49db-ba99-4cd86c3d824d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-47acdca4-f2e4-49db-ba99-4cd86c3d824d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 14a ###\n",
        "\n",
        "# We will now examine df4 to ensure that the columns outlined above were removed and for violations of tidy data principles.\n",
        "\n",
        "df4.head()\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that df4 differs from df1 as it is only measuring migrant stock for females, not males and both sexes.\n",
        "# As such, there are much fewer columns.\n",
        "# However, because of the columns that were deleted in df4, there is a single observational unit in the table, so we will not need to split the table in 2 as in step 11a. \n",
        "\n",
        "# VIOLATIONS:\n",
        "# df4 violates the same tidy data principles detailed above for df1 in step 2 with the exception of the multiple obervational units in one table.\n",
        "\n",
        "# PLAN: \n",
        "# We will simplify and apply the same rules and code from df1 to tidy df4 to account for two fewer sexes, and with the exception of the table splitting in step 11a.\n",
        "# We cannot skip the creation of a sex variable and column even though there is only one sex as the table header cannot contain valuable information, i.e., female in this case.\n",
        "# Also, each variable must form its own column."
      ],
      "metadata": {
        "id": "EhzP7RBcj_wK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "91fe614f-111d-4934-d7f2-f207f06b5b30"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder  \\\n",
              "0          NaN   \n",
              "1          1.0   \n",
              "2          2.0   \n",
              "3          3.0   \n",
              "4          4.0   \n",
              "\n",
              "  Female migrants as a percentage of the international migrant stock  \\\n",
              "0                                               1990                   \n",
              "1                                           49.03915                   \n",
              "2                                          51.123977                   \n",
              "3                                          46.592099                   \n",
              "4                                          47.261155                   \n",
              "\n",
              "  Unnamed: 6 Unnamed: 7 Unnamed: 8   Unnamed: 9  Unnamed: 10  \n",
              "0       1995       2000       2005  2010.000000  2015.000000  \n",
              "1   49.16879  49.112244  48.832993    48.305660    48.249769  \n",
              "2  51.149024  51.113307  51.171501    51.658932    51.866687  \n",
              "3  46.500135  46.128444  45.134297    43.319780    43.327078  \n",
              "4  47.571664  46.826689  45.157406    45.499573    45.942752  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-daa4c5b5-0e65-4173-a44c-3b18d02a8414\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Female migrants as a percentage of the international migrant stock</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>49.03915</td>\n",
              "      <td>49.16879</td>\n",
              "      <td>49.112244</td>\n",
              "      <td>48.832993</td>\n",
              "      <td>48.305660</td>\n",
              "      <td>48.249769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>51.123977</td>\n",
              "      <td>51.149024</td>\n",
              "      <td>51.113307</td>\n",
              "      <td>51.171501</td>\n",
              "      <td>51.658932</td>\n",
              "      <td>51.866687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>46.592099</td>\n",
              "      <td>46.500135</td>\n",
              "      <td>46.128444</td>\n",
              "      <td>45.134297</td>\n",
              "      <td>43.319780</td>\n",
              "      <td>43.327078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>47.261155</td>\n",
              "      <td>47.571664</td>\n",
              "      <td>46.826689</td>\n",
              "      <td>45.157406</td>\n",
              "      <td>45.499573</td>\n",
              "      <td>45.942752</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-daa4c5b5-0e65-4173-a44c-3b18d02a8414')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-daa4c5b5-0e65-4173-a44c-3b18d02a8414 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-daa4c5b5-0e65-4173-a44c-3b18d02a8414');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 14b ###\n",
        "\n",
        "# Working on df4.\n",
        "\n",
        "# Assign column names to all migrant stock/sex columns as in step 5.\n",
        "# However, consider that there is only one sex to account for. Simplify the code to reflect this.\n",
        "for i in range(1,7): # Adjust range for df4.\n",
        "\n",
        "  if i in range(1,7):\n",
        "    df4.columns.values[i] = \"F\" # Female is the only sex option in df4.\n",
        "\n",
        "# Append sex and year data as in step 6. \n",
        "# However, we can simplify by removing the for loop and if/elif/else statements and directly append the columns as there are only a few. \n",
        "df4.columns.values[1] = df4.columns.values[1] + \"1990\"\n",
        "df4.columns.values[2] = df4.columns.values[2] + \"1995\"\n",
        "df4.columns.values[3] = df4.columns.values[3] + \"2000\"\n",
        "df4.columns.values[4] = df4.columns.values[4] + \"2005\"\n",
        "df4.columns.values[5] = df4.columns.values[5] + \"2010\"\n",
        "df4.columns.values[6] = df4.columns.values[6] + \"2015\"\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df4.drop([0],inplace=True)\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column as in step 9. \n",
        "df4 = df4.melt(id_vars = ['Sort\\norder'], var_name = \"sex_yr\", value_name = \"Migrants as a percentage of the international migrant stock\") # Adjust column and value names for df4.\n",
        "\n",
        "# Split sex and year into two variables and columns as in step 10.\n",
        "df4 = df4.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Year = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) \n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df4"
      ],
      "metadata": {
        "id": "C-ru4dfmtUJf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "6fa7ba68-9a9c-4b1c-9abc-189f73861aec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder Migrants as a percentage of the international migrant stock  \\\n",
              "0             1.0                                           49.03915            \n",
              "1             2.0                                          51.123977            \n",
              "2             3.0                                          46.592099            \n",
              "3             4.0                                          47.261155            \n",
              "4             5.0                                          46.466684            \n",
              "...           ...                                                ...            \n",
              "1585        261.0                                          49.908704            \n",
              "1586        262.0                                          52.156057            \n",
              "1587        263.0                                          45.437096            \n",
              "1588        264.0                                          44.680851            \n",
              "1589        265.0                                           49.52615            \n",
              "\n",
              "     Sex  Year  \n",
              "0      F  1990  \n",
              "1      F  1990  \n",
              "2      F  1990  \n",
              "3      F  1990  \n",
              "4      F  1990  \n",
              "...   ..   ...  \n",
              "1585   F  2015  \n",
              "1586   F  2015  \n",
              "1587   F  2015  \n",
              "1588   F  2015  \n",
              "1589   F  2015  \n",
              "\n",
              "[1590 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb3ad4c0-ac1b-49c9-af87-fac5bda70a08\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Migrants as a percentage of the international migrant stock</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>49.03915</td>\n",
              "      <td>F</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>51.123977</td>\n",
              "      <td>F</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>46.592099</td>\n",
              "      <td>F</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>47.261155</td>\n",
              "      <td>F</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>46.466684</td>\n",
              "      <td>F</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1585</th>\n",
              "      <td>261.0</td>\n",
              "      <td>49.908704</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1586</th>\n",
              "      <td>262.0</td>\n",
              "      <td>52.156057</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1587</th>\n",
              "      <td>263.0</td>\n",
              "      <td>45.437096</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1588</th>\n",
              "      <td>264.0</td>\n",
              "      <td>44.680851</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1589</th>\n",
              "      <td>265.0</td>\n",
              "      <td>49.52615</td>\n",
              "      <td>F</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1590 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb3ad4c0-ac1b-49c9-af87-fac5bda70a08')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fb3ad4c0-ac1b-49c9-af87-fac5bda70a08 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fb3ad4c0-ac1b-49c9-af87-fac5bda70a08');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 15a ###\n",
        "\n",
        "# We will now examine df5 to ensure that the columns outlined above were removed and for violations of tidy data principles.\n",
        "\n",
        "df5.head()\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that df5 is similar to df1, with the exception of the columns that were deleted, table header titles, and one less column for each sex/year as the years are in ranges. \n",
        "# However, because of the columns that were deleted in df5, there is a single observational unit in the table, so we will not need to split the table in 2 as in step 11a. \n",
        "\n",
        "# VIOLATIONS:\n",
        "# df5 violates the same tidy data principles detailed above for df1 in step 2 with the exception of the multiple obervational units in one table.\n",
        "\n",
        "# PLAN: \n",
        "# We will apply the same rules and code from df1 to tidy df5 with the exception of the table splitting in step 11a. \n",
        "# We will also need to consider that the years are in ranges, which creates one less sex/year column per sex, shifting the indices. "
      ],
      "metadata": {
        "id": "RdwTkAhJx5CQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "96e4a7b6-70ad-43c4-aee2-3818fe44835e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Annual rate of change of the migrant stock (both sexes)  \\\n",
              "0          NaN                                          1990-1995        \n",
              "1          1.0                                           1.051865        \n",
              "2          2.0                                           2.275847        \n",
              "3          3.0                                          -0.487389        \n",
              "4          4.0                                           1.118175        \n",
              "\n",
              "  Unnamed: 6 Unnamed: 7 Unnamed: 8 Unnamed: 9  \\\n",
              "0  1995-2000  2000-2005  2005-2010  2010-2015   \n",
              "1   1.428058   2.042124    2.95416   1.890991   \n",
              "2   2.264965    2.50708   2.466343   1.160824   \n",
              "3   0.241777   1.328107   3.702217   2.929634   \n",
              "4  -3.001139  -0.539636   0.419137   3.526927   \n",
              "\n",
              "  Annual rate of change of the migrant stock (male) Unnamed: 11 Unnamed: 12  \\\n",
              "0                                         1990-1995   1995-2000   2000-2005   \n",
              "1                                          1.000922    1.450294    2.151575   \n",
              "2                                          2.265595    2.279583    2.483259   \n",
              "3                                          -0.45298    0.380246    1.693824   \n",
              "4                                          1.000073   -2.718952    0.078575   \n",
              "\n",
              "  Unnamed: 13 Unnamed: 14 Annual rate of change of the migrant stock (female)  \\\n",
              "0   2005-2010   2010-2015                                          1990-1995    \n",
              "1    3.159228    1.912603                                           1.104667    \n",
              "2    2.265689    1.074685                                           2.285643    \n",
              "3    4.352954    2.927058                                          -0.526904    \n",
              "4    0.293964    3.363629                                           1.249146    \n",
              "\n",
              "  Unnamed: 16 Unnamed: 17 Unnamed: 18 Unnamed: 19  \n",
              "0   1995-2000   2000-2005   2005-2010   2010-2015  \n",
              "1    1.405044     1.92808    2.737012    1.867837  \n",
              "2    2.250995    2.529838     2.65595    1.241097  \n",
              "3    0.081268     0.89236    2.881555    2.933003  \n",
              "4   -3.316818   -1.265617     0.57011     3.72079  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae3093a0-0c29-45be-9969-33b2860f9031\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Annual rate of change of the migrant stock (both sexes)</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Annual rate of change of the migrant stock (male)</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Annual rate of change of the migrant stock (female)</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>1995-2000</td>\n",
              "      <td>2000-2005</td>\n",
              "      <td>2005-2010</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>1995-2000</td>\n",
              "      <td>2000-2005</td>\n",
              "      <td>2005-2010</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>1995-2000</td>\n",
              "      <td>2000-2005</td>\n",
              "      <td>2005-2010</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.051865</td>\n",
              "      <td>1.428058</td>\n",
              "      <td>2.042124</td>\n",
              "      <td>2.95416</td>\n",
              "      <td>1.890991</td>\n",
              "      <td>1.000922</td>\n",
              "      <td>1.450294</td>\n",
              "      <td>2.151575</td>\n",
              "      <td>3.159228</td>\n",
              "      <td>1.912603</td>\n",
              "      <td>1.104667</td>\n",
              "      <td>1.405044</td>\n",
              "      <td>1.92808</td>\n",
              "      <td>2.737012</td>\n",
              "      <td>1.867837</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2.275847</td>\n",
              "      <td>2.264965</td>\n",
              "      <td>2.50708</td>\n",
              "      <td>2.466343</td>\n",
              "      <td>1.160824</td>\n",
              "      <td>2.265595</td>\n",
              "      <td>2.279583</td>\n",
              "      <td>2.483259</td>\n",
              "      <td>2.265689</td>\n",
              "      <td>1.074685</td>\n",
              "      <td>2.285643</td>\n",
              "      <td>2.250995</td>\n",
              "      <td>2.529838</td>\n",
              "      <td>2.65595</td>\n",
              "      <td>1.241097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>-0.487389</td>\n",
              "      <td>0.241777</td>\n",
              "      <td>1.328107</td>\n",
              "      <td>3.702217</td>\n",
              "      <td>2.929634</td>\n",
              "      <td>-0.45298</td>\n",
              "      <td>0.380246</td>\n",
              "      <td>1.693824</td>\n",
              "      <td>4.352954</td>\n",
              "      <td>2.927058</td>\n",
              "      <td>-0.526904</td>\n",
              "      <td>0.081268</td>\n",
              "      <td>0.89236</td>\n",
              "      <td>2.881555</td>\n",
              "      <td>2.933003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>1.118175</td>\n",
              "      <td>-3.001139</td>\n",
              "      <td>-0.539636</td>\n",
              "      <td>0.419137</td>\n",
              "      <td>3.526927</td>\n",
              "      <td>1.000073</td>\n",
              "      <td>-2.718952</td>\n",
              "      <td>0.078575</td>\n",
              "      <td>0.293964</td>\n",
              "      <td>3.363629</td>\n",
              "      <td>1.249146</td>\n",
              "      <td>-3.316818</td>\n",
              "      <td>-1.265617</td>\n",
              "      <td>0.57011</td>\n",
              "      <td>3.72079</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae3093a0-0c29-45be-9969-33b2860f9031')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ae3093a0-0c29-45be-9969-33b2860f9031 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ae3093a0-0c29-45be-9969-33b2860f9031');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 15b ###\n",
        "\n",
        "# Working on df5.\n",
        "\n",
        "# Assign column names to all migrant stock/sex columns as in step 5.\n",
        "for i in range(1,16): # Adjust range for df5.\n",
        "\n",
        "  if i in range(1,6):\n",
        "    df5.columns.values[i] = \"B\" \n",
        "  elif i in range (6,11):\n",
        "    df5.columns.values[i] = \"M\"\n",
        "  else:\n",
        "    df5.columns.values[i] = \"F\"\n",
        "\n",
        "# Append sex and year data as in step 6.\n",
        "for j in range(1,16): # Adjust range for df5.\n",
        "\n",
        "  if j in [1,6,11]:\n",
        "    df5.columns.values[j] = df5.columns.values[j] + \"1990-1995\"\n",
        "  elif j in [2,7,12]:\n",
        "    df5.columns.values[j] = df5.columns.values[j] + \"1995-2000\"\n",
        "  elif j in [3,8,13]:\n",
        "    df5.columns.values[j] = df5.columns.values[j] + \"2000-2005\"\n",
        "  elif j in [4,9,14]:\n",
        "    df5.columns.values[j] = df5.columns.values[j] + \"2005-2010\"\n",
        "  else:\n",
        "    df5.columns.values[j] = df5.columns.values[j] + \"2010-2015\"\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df5.drop([0],inplace=True)\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column as in step 9. \n",
        "df5 = df5.melt(id_vars = ['Sort\\norder'], var_name = \"sex_yr\", value_name = \"Annual rate of change of the migrant stock\") # Adjust column and value names for df5.\n",
        "\n",
        "# Split sex and year into two variables and columns as in step 10.\n",
        "df5 = df5.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Years = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) # Adjust column and value names for df5.\n",
        "\n",
        "# Confirm that the table is tidy. Look at header data.\n",
        "df5"
      ],
      "metadata": {
        "id": "vL8bEuFbykoY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "ba8f9914-dc21-4a65-a686-b3cd89947742"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder Annual rate of change of the migrant stock Sex      Years\n",
              "0             1.0                                   1.051865   B  1990-1995\n",
              "1             2.0                                   2.275847   B  1990-1995\n",
              "2             3.0                                  -0.487389   B  1990-1995\n",
              "3             4.0                                   1.118175   B  1990-1995\n",
              "4             5.0                                  -0.803244   B  1990-1995\n",
              "...           ...                                        ...  ..        ...\n",
              "3970        261.0                                  -0.545343   F  2010-2015\n",
              "3971        262.0                                    2.60325   F  2010-2015\n",
              "3972        263.0                                   2.526318   F  2010-2015\n",
              "3973        264.0                                  -1.819436   F  2010-2015\n",
              "3974        265.0                                   0.516899   F  2010-2015\n",
              "\n",
              "[3975 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c33c32e6-a108-42b0-87d0-59d98d24760d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Annual rate of change of the migrant stock</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Years</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.051865</td>\n",
              "      <td>B</td>\n",
              "      <td>1990-1995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2.275847</td>\n",
              "      <td>B</td>\n",
              "      <td>1990-1995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>-0.487389</td>\n",
              "      <td>B</td>\n",
              "      <td>1990-1995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>1.118175</td>\n",
              "      <td>B</td>\n",
              "      <td>1990-1995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>-0.803244</td>\n",
              "      <td>B</td>\n",
              "      <td>1990-1995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3970</th>\n",
              "      <td>261.0</td>\n",
              "      <td>-0.545343</td>\n",
              "      <td>F</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3971</th>\n",
              "      <td>262.0</td>\n",
              "      <td>2.60325</td>\n",
              "      <td>F</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3972</th>\n",
              "      <td>263.0</td>\n",
              "      <td>2.526318</td>\n",
              "      <td>F</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3973</th>\n",
              "      <td>264.0</td>\n",
              "      <td>-1.819436</td>\n",
              "      <td>F</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3974</th>\n",
              "      <td>265.0</td>\n",
              "      <td>0.516899</td>\n",
              "      <td>F</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3975 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c33c32e6-a108-42b0-87d0-59d98d24760d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c33c32e6-a108-42b0-87d0-59d98d24760d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c33c32e6-a108-42b0-87d0-59d98d24760d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Step 16a ###\n",
        "\n",
        "# We will now examine df6 to ensure that the columns outlined above were removed and for violations of tidy data principles.\n",
        "\n",
        "df6.head()\n",
        "\n",
        "# FINDINGS: \n",
        "# We can see that df6 differs from df1 as it seems that we are measuring 3 observational units in the table, so we will need to split the table in 3, similar to step 11a. \n",
        "# The first table is the only observational unit that includes sex as a variable.\n",
        "# It will only be measuring migrant stock for both sexes, and not males and females separately.\n",
        "\n",
        "# VIOLATIONS:\n",
        "# df3 violates the same tidy data principles detailed above for df1 in step 2, including the violation of having multiple obervational units in one table.\n",
        "\n",
        "# PLAN: \n",
        "# We will start out by splitting the data frame into 3 separate tables. \n",
        "# Unlike for df1 in step 11a where we split after cleaning, we will split first here as each observational unit and table will require different steps to tidy.\n",
        "# For the first table, there will only be one possible sex value, \"both sexes\", so we can use similar code from df4 in step 14b where there was also only one possible sex value.\n",
        "# For the second and third tables, as there are no sex variables, we will only need to create year variables. "
      ],
      "metadata": {
        "id": "-ITm-UO10TKX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "outputId": "026098e9-52d2-46e8-a906-eb72117b19e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Estimated refugee stock at mid-year (both sexes) Unnamed: 6  \\\n",
              "0          NaN                                             1990       1995   \n",
              "1          1.0                                         18836571   17853840   \n",
              "2          2.0                                          2014564    3609670   \n",
              "3          3.0                                         16822007   14244170   \n",
              "4          4.0                                          5048391    5160131   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8  Unnamed: 9  Unnamed: 10  \\\n",
              "0       2000       2005        2010         2015   \n",
              "1   15827803   13276733    15370755     19577474   \n",
              "2    2997256    2361229     2046917      1954224   \n",
              "3   12830547   10915504    13323838     17623250   \n",
              "4    3047488    2363782     1957884      3443582   \n",
              "\n",
              "  Refugees as a percentage of the international migrant stock Unnamed: 12  \\\n",
              "0                                               1990                 1995   \n",
              "1                                          12.346732            11.103013   \n",
              "2                                           2.445494             3.910511   \n",
              "3                                          23.968236            20.795958   \n",
              "4                                           45.56588            44.041961   \n",
              "\n",
              "  Unnamed: 13 Unnamed: 14  Unnamed: 15  Unnamed: 16  \\\n",
              "0        2000        2005  2010.000000  2015.000000   \n",
              "1    9.164736    6.941389     6.932687     8.033424   \n",
              "2    2.899391    2.015025     1.544140     1.391085   \n",
              "3   18.507035   14.733162    14.944759    17.073768   \n",
              "4   30.221557    24.08243    19.533425    28.801534   \n",
              "\n",
              "  Annual rate of change of the refugee stock Unnamed: 18 Unnamed: 19  \\\n",
              "0                                  1990-1995   1995-2000   2000-2005   \n",
              "1                                  -2.123497   -3.837069   -5.557223   \n",
              "2                                   9.388424   -5.983348   -7.277379   \n",
              "3                                  -2.839417   -2.332154      -4.561   \n",
              "4                                  -0.680327   -7.531747   -4.541459   \n",
              "\n",
              "  Unnamed: 20 Unnamed: 21  \n",
              "0   2005-2010   2010-2015  \n",
              "1   -0.025089    2.947267  \n",
              "2   -5.323293   -2.087656  \n",
              "3    0.285195    2.663652  \n",
              "4   -4.187109    7.766031  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-107ee566-66f1-4200-9d8b-8ddf68683cf8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Estimated refugee stock at mid-year (both sexes)</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "      <th>Refugees as a percentage of the international migrant stock</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Annual rate of change of the refugee stock</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "      <th>Unnamed: 20</th>\n",
              "      <th>Unnamed: 21</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>1995-2000</td>\n",
              "      <td>2000-2005</td>\n",
              "      <td>2005-2010</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18836571</td>\n",
              "      <td>17853840</td>\n",
              "      <td>15827803</td>\n",
              "      <td>13276733</td>\n",
              "      <td>15370755</td>\n",
              "      <td>19577474</td>\n",
              "      <td>12.346732</td>\n",
              "      <td>11.103013</td>\n",
              "      <td>9.164736</td>\n",
              "      <td>6.941389</td>\n",
              "      <td>6.932687</td>\n",
              "      <td>8.033424</td>\n",
              "      <td>-2.123497</td>\n",
              "      <td>-3.837069</td>\n",
              "      <td>-5.557223</td>\n",
              "      <td>-0.025089</td>\n",
              "      <td>2.947267</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2014564</td>\n",
              "      <td>3609670</td>\n",
              "      <td>2997256</td>\n",
              "      <td>2361229</td>\n",
              "      <td>2046917</td>\n",
              "      <td>1954224</td>\n",
              "      <td>2.445494</td>\n",
              "      <td>3.910511</td>\n",
              "      <td>2.899391</td>\n",
              "      <td>2.015025</td>\n",
              "      <td>1.544140</td>\n",
              "      <td>1.391085</td>\n",
              "      <td>9.388424</td>\n",
              "      <td>-5.983348</td>\n",
              "      <td>-7.277379</td>\n",
              "      <td>-5.323293</td>\n",
              "      <td>-2.087656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>16822007</td>\n",
              "      <td>14244170</td>\n",
              "      <td>12830547</td>\n",
              "      <td>10915504</td>\n",
              "      <td>13323838</td>\n",
              "      <td>17623250</td>\n",
              "      <td>23.968236</td>\n",
              "      <td>20.795958</td>\n",
              "      <td>18.507035</td>\n",
              "      <td>14.733162</td>\n",
              "      <td>14.944759</td>\n",
              "      <td>17.073768</td>\n",
              "      <td>-2.839417</td>\n",
              "      <td>-2.332154</td>\n",
              "      <td>-4.561</td>\n",
              "      <td>0.285195</td>\n",
              "      <td>2.663652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>5048391</td>\n",
              "      <td>5160131</td>\n",
              "      <td>3047488</td>\n",
              "      <td>2363782</td>\n",
              "      <td>1957884</td>\n",
              "      <td>3443582</td>\n",
              "      <td>45.56588</td>\n",
              "      <td>44.041961</td>\n",
              "      <td>30.221557</td>\n",
              "      <td>24.08243</td>\n",
              "      <td>19.533425</td>\n",
              "      <td>28.801534</td>\n",
              "      <td>-0.680327</td>\n",
              "      <td>-7.531747</td>\n",
              "      <td>-4.541459</td>\n",
              "      <td>-4.187109</td>\n",
              "      <td>7.766031</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-107ee566-66f1-4200-9d8b-8ddf68683cf8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-107ee566-66f1-4200-9d8b-8ddf68683cf8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-107ee566-66f1-4200-9d8b-8ddf68683cf8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16b ###\n",
        "\n",
        "# Working on df6.\n",
        "\n",
        "# We will create three tables so that a single observaional unit is in one table.\n",
        "# Table 1 will contain the obervational unit, estimated refugee stock.\n",
        "# Table 2 will contain the obervational unit, refugees as a percentage of the international migrant stock.\n",
        "# Table 3 will contain the obervational unit, annual rate of change of the refugee stock.\n",
        "\n",
        "# Table 1 for df6. Ensure that table names are distiniguishable from table names for df1 in step 11a. \n",
        "df6_table1orig = df6.iloc[:,:-11] # Remove the last eleven columns. The \"orig\" stands for original as we will copy the table so that the original table remains unchanged.\n",
        "df6_table1 = df6_table1orig.copy(deep=True) # Make a copy.\n",
        "df6_table1.head() # Confirm that the table was split as desired. Look at header data."
      ],
      "metadata": {
        "id": "d6ghF76A98HL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "de38f978-970f-4fea-e995-845f9848700e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Estimated refugee stock at mid-year (both sexes) Unnamed: 6  \\\n",
              "0          NaN                                             1990       1995   \n",
              "1          1.0                                         18836571   17853840   \n",
              "2          2.0                                          2014564    3609670   \n",
              "3          3.0                                         16822007   14244170   \n",
              "4          4.0                                          5048391    5160131   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8  Unnamed: 9  Unnamed: 10  \n",
              "0       2000       2005        2010         2015  \n",
              "1   15827803   13276733    15370755     19577474  \n",
              "2    2997256    2361229     2046917      1954224  \n",
              "3   12830547   10915504    13323838     17623250  \n",
              "4    3047488    2363782     1957884      3443582  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89714d45-1710-447a-95f9-e2ebdc4cde10\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Estimated refugee stock at mid-year (both sexes)</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18836571</td>\n",
              "      <td>17853840</td>\n",
              "      <td>15827803</td>\n",
              "      <td>13276733</td>\n",
              "      <td>15370755</td>\n",
              "      <td>19577474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2014564</td>\n",
              "      <td>3609670</td>\n",
              "      <td>2997256</td>\n",
              "      <td>2361229</td>\n",
              "      <td>2046917</td>\n",
              "      <td>1954224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>16822007</td>\n",
              "      <td>14244170</td>\n",
              "      <td>12830547</td>\n",
              "      <td>10915504</td>\n",
              "      <td>13323838</td>\n",
              "      <td>17623250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>5048391</td>\n",
              "      <td>5160131</td>\n",
              "      <td>3047488</td>\n",
              "      <td>2363782</td>\n",
              "      <td>1957884</td>\n",
              "      <td>3443582</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89714d45-1710-447a-95f9-e2ebdc4cde10')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-89714d45-1710-447a-95f9-e2ebdc4cde10 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-89714d45-1710-447a-95f9-e2ebdc4cde10');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16c ###\n",
        "\n",
        "# Table 2 for df6. \n",
        "df6_table2orig = df6.iloc[:,[0,7,8,9,10,11,12]] # Keep the first column as the unique id, and the second observational unit columns.\n",
        "df6_table2 = df6_table2orig.copy(deep=True) # Make a copy.\n",
        "df6_table2.head() # Confirm that the table was split as desired. Look at header data."
      ],
      "metadata": {
        "id": "DOc8Ft7bAUOb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "dfad58c9-1a4e-47cd-8763-7fc4e790154c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Refugees as a percentage of the international migrant stock  \\\n",
              "0          NaN                                               1990            \n",
              "1          1.0                                          12.346732            \n",
              "2          2.0                                           2.445494            \n",
              "3          3.0                                          23.968236            \n",
              "4          4.0                                           45.56588            \n",
              "\n",
              "  Unnamed: 12 Unnamed: 13 Unnamed: 14  Unnamed: 15  Unnamed: 16  \n",
              "0        1995        2000        2005  2010.000000  2015.000000  \n",
              "1   11.103013    9.164736    6.941389     6.932687     8.033424  \n",
              "2    3.910511    2.899391    2.015025     1.544140     1.391085  \n",
              "3   20.795958   18.507035   14.733162    14.944759    17.073768  \n",
              "4   44.041961   30.221557    24.08243    19.533425    28.801534  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bb808417-9db3-439a-96b3-203062faa761\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Refugees as a percentage of the international migrant stock</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990</td>\n",
              "      <td>1995</td>\n",
              "      <td>2000</td>\n",
              "      <td>2005</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>12.346732</td>\n",
              "      <td>11.103013</td>\n",
              "      <td>9.164736</td>\n",
              "      <td>6.941389</td>\n",
              "      <td>6.932687</td>\n",
              "      <td>8.033424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2.445494</td>\n",
              "      <td>3.910511</td>\n",
              "      <td>2.899391</td>\n",
              "      <td>2.015025</td>\n",
              "      <td>1.544140</td>\n",
              "      <td>1.391085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>23.968236</td>\n",
              "      <td>20.795958</td>\n",
              "      <td>18.507035</td>\n",
              "      <td>14.733162</td>\n",
              "      <td>14.944759</td>\n",
              "      <td>17.073768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>45.56588</td>\n",
              "      <td>44.041961</td>\n",
              "      <td>30.221557</td>\n",
              "      <td>24.08243</td>\n",
              "      <td>19.533425</td>\n",
              "      <td>28.801534</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb808417-9db3-439a-96b3-203062faa761')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb808417-9db3-439a-96b3-203062faa761 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb808417-9db3-439a-96b3-203062faa761');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16d ###\n",
        "\n",
        "# Table 3 for df6. \n",
        "df6_table3orig = df6.iloc[:,[0,13,14,15,16,17]] # Keep the first column as the unique id, and the third observational unit columns.\n",
        "df6_table3 = df6_table3orig.copy(deep=True) # Make a copy.\n",
        "df6_table3.head() # Confirm that the table was split as desired. Look at header data."
      ],
      "metadata": {
        "id": "aJWTh23UA5uL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "69b33de3-ee5b-408c-bc38-4cf46fe96583"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sort\\norder Annual rate of change of the refugee stock Unnamed: 18  \\\n",
              "0          NaN                                  1990-1995   1995-2000   \n",
              "1          1.0                                  -2.123497   -3.837069   \n",
              "2          2.0                                   9.388424   -5.983348   \n",
              "3          3.0                                  -2.839417   -2.332154   \n",
              "4          4.0                                  -0.680327   -7.531747   \n",
              "\n",
              "  Unnamed: 19 Unnamed: 20 Unnamed: 21  \n",
              "0   2000-2005   2005-2010   2010-2015  \n",
              "1   -5.557223   -0.025089    2.947267  \n",
              "2   -7.277379   -5.323293   -2.087656  \n",
              "3      -4.561    0.285195    2.663652  \n",
              "4   -4.541459   -4.187109    7.766031  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1d17218d-02f9-4c88-bce1-89a664bc1c14\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Annual rate of change of the refugee stock</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "      <th>Unnamed: 19</th>\n",
              "      <th>Unnamed: 20</th>\n",
              "      <th>Unnamed: 21</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>1995-2000</td>\n",
              "      <td>2000-2005</td>\n",
              "      <td>2005-2010</td>\n",
              "      <td>2010-2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.123497</td>\n",
              "      <td>-3.837069</td>\n",
              "      <td>-5.557223</td>\n",
              "      <td>-0.025089</td>\n",
              "      <td>2.947267</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>9.388424</td>\n",
              "      <td>-5.983348</td>\n",
              "      <td>-7.277379</td>\n",
              "      <td>-5.323293</td>\n",
              "      <td>-2.087656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.0</td>\n",
              "      <td>-2.839417</td>\n",
              "      <td>-2.332154</td>\n",
              "      <td>-4.561</td>\n",
              "      <td>0.285195</td>\n",
              "      <td>2.663652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.0</td>\n",
              "      <td>-0.680327</td>\n",
              "      <td>-7.531747</td>\n",
              "      <td>-4.541459</td>\n",
              "      <td>-4.187109</td>\n",
              "      <td>7.766031</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d17218d-02f9-4c88-bce1-89a664bc1c14')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1d17218d-02f9-4c88-bce1-89a664bc1c14 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1d17218d-02f9-4c88-bce1-89a664bc1c14');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16e ###\n",
        "\n",
        "# Working on df6_table1.\n",
        "\n",
        "# Assign column names to all migrant stock/sex columns as in step 5.\n",
        "# However, consider that there is only one sex to account for. Simplify the code to reflect this.\n",
        "for i in range(1,7): # Adjust range for df6, first observational unit.\n",
        "\n",
        "  if i in range(1,7):\n",
        "    df6_table1.columns.values[i] = \"B\" # Both is the only sex option for the first observational unit in df6.\n",
        "\n",
        "# Append sex and year data as in step 6. \n",
        "# However, we can simplify by removing the for loop and if/elif/else statements and directly append the columns as there are only a few. \n",
        "df6_table1.columns.values[1] = df6_table1.columns.values[1] + \"1990\"\n",
        "df6_table1.columns.values[2] = df6_table1.columns.values[2] + \"1995\"\n",
        "df6_table1.columns.values[3] = df6_table1.columns.values[3] + \"2000\"\n",
        "df6_table1.columns.values[4] = df6_table1.columns.values[4] + \"2005\"\n",
        "df6_table1.columns.values[5] = df6_table1.columns.values[5] + \"2010\"\n",
        "df6_table1.columns.values[6] = df6_table1.columns.values[6] + \"2015\"\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df6_table1.drop([0],inplace=True)\n",
        "\n",
        "# Melt the sex/year from column headers to values in a column as in step 9. \n",
        "df6_table1 = df6_table1.melt(id_vars = ['Sort\\norder'], var_name = \"sex_yr\", value_name = \"Estimated refugee stock at mid-year\") # Adjust column and value names for df6_table1.\n",
        "\n",
        "# Split sex and year into two variables and columns as in step 10.\n",
        "df6_table1 = df6_table1.assign(Sex = lambda x: x.sex_yr.str[0].astype(str), Year = lambda x: x.sex_yr.str[1:].astype(str)).drop(\"sex_yr\",axis=1) \n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df6_table1"
      ],
      "metadata": {
        "id": "WSb70-vqBKWJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "bff3fb35-7489-45ac-d3ff-4c271cd091e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder Estimated refugee stock at mid-year Sex  Year\n",
              "0             1.0                            18836571   B  1990\n",
              "1             2.0                             2014564   B  1990\n",
              "2             3.0                            16822007   B  1990\n",
              "3             4.0                             5048391   B  1990\n",
              "4             5.0                            11773616   B  1990\n",
              "...           ...                                 ...  ..   ...\n",
              "1585        261.0                                   0   B  2015\n",
              "1586        262.0                                   0   B  2015\n",
              "1587        263.0                                   0   B  2015\n",
              "1588        264.0                                   0   B  2015\n",
              "1589        265.0                                   0   B  2015\n",
              "\n",
              "[1590 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e2528784-4f04-4e9b-a1bd-ae0459a6eed4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Estimated refugee stock at mid-year</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18836571</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>2014564</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>16822007</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>5048391</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>11773616</td>\n",
              "      <td>B</td>\n",
              "      <td>1990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1585</th>\n",
              "      <td>261.0</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1586</th>\n",
              "      <td>262.0</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1587</th>\n",
              "      <td>263.0</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1588</th>\n",
              "      <td>264.0</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1589</th>\n",
              "      <td>265.0</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1590 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2528784-4f04-4e9b-a1bd-ae0459a6eed4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e2528784-4f04-4e9b-a1bd-ae0459a6eed4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e2528784-4f04-4e9b-a1bd-ae0459a6eed4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16f ###\n",
        "\n",
        "# Working on df6_table2.\n",
        "\n",
        "# Bring the year data from the second header row up to the first header row. \n",
        "# As we are not appending with sex or any other variable in this case, we can simply rename the columns.\n",
        "df6_table2.columns = ['Sort\\norder', '1990', '1995', '2000', '2005', '2010', '2015']\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df6_table2.drop([0],inplace=True)\n",
        "\n",
        "# Melt the year from column headers to values in a column as in step 9. \n",
        "df6_table2 = df6_table2.melt(id_vars = ['Sort\\norder'], var_name = \"Year\", value_name = \"Refugees as a percentage of the international migrant stock\") # Adjust column and value names for df6_table2.\n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df6_table2"
      ],
      "metadata": {
        "id": "O_KirrhDFe4s",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "e15a2862-c247-4c32-8d6d-e9b830d66129"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder  Year  \\\n",
              "0             1.0  1990   \n",
              "1             2.0  1990   \n",
              "2             3.0  1990   \n",
              "3             4.0  1990   \n",
              "4             5.0  1990   \n",
              "...           ...   ...   \n",
              "1585        261.0  2015   \n",
              "1586        262.0  2015   \n",
              "1587        263.0  2015   \n",
              "1588        264.0  2015   \n",
              "1589        265.0  2015   \n",
              "\n",
              "     Refugees as a percentage of the international migrant stock  \n",
              "0                                             12.346732           \n",
              "1                                              2.445494           \n",
              "2                                             23.968236           \n",
              "3                                              45.56588           \n",
              "4                                             19.919743           \n",
              "...                                                 ...           \n",
              "1585                                                0.0           \n",
              "1586                                                0.0           \n",
              "1587                                                0.0           \n",
              "1588                                                0.0           \n",
              "1589                                                0.0           \n",
              "\n",
              "[1590 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c046dda-218f-4fe3-9dd7-ed3b18a298bc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Year</th>\n",
              "      <th>Refugees as a percentage of the international migrant stock</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1990</td>\n",
              "      <td>12.346732</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>1990</td>\n",
              "      <td>2.445494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>1990</td>\n",
              "      <td>23.968236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>1990</td>\n",
              "      <td>45.56588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>1990</td>\n",
              "      <td>19.919743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1585</th>\n",
              "      <td>261.0</td>\n",
              "      <td>2015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1586</th>\n",
              "      <td>262.0</td>\n",
              "      <td>2015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1587</th>\n",
              "      <td>263.0</td>\n",
              "      <td>2015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1588</th>\n",
              "      <td>264.0</td>\n",
              "      <td>2015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1589</th>\n",
              "      <td>265.0</td>\n",
              "      <td>2015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1590 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c046dda-218f-4fe3-9dd7-ed3b18a298bc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8c046dda-218f-4fe3-9dd7-ed3b18a298bc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8c046dda-218f-4fe3-9dd7-ed3b18a298bc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### STEP 16g ###\n",
        "\n",
        "# Working on df6_table3.\n",
        "\n",
        "# Bring the year data from the second header row up to the first header row. \n",
        "# As we are not appending with sex or any other variable in this case, we can simply rename the columns.\n",
        "df6_table3.columns = ['Sort\\norder', '1990-1995', '1995-2000', '2000-2005', '2005-2010', '2010-2015']\n",
        "\n",
        "# Remove the second header row as in step 8. \n",
        "df6_table3.drop([0],inplace=True)\n",
        "\n",
        "# Melt the year from column headers to values in a column as in step 9. \n",
        "df6_table3 = df6_table3.melt(id_vars = ['Sort\\norder'], var_name = \"Years\", value_name = \"Annual rate of change of the refugee stock\") # Adjust column and value names for df6_table3.\n",
        "\n",
        "# Confirm that the table is tidy. Look at header and tail data.\n",
        "df6_table3"
      ],
      "metadata": {
        "id": "FUhOL3IyPwqP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "496d6bc0-5f08-41a1-c59c-c34f243fa96c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Sort\\norder      Years Annual rate of change of the refugee stock\n",
              "0             1.0  1990-1995                                  -2.123497\n",
              "1             2.0  1990-1995                                   9.388424\n",
              "2             3.0  1990-1995                                  -2.839417\n",
              "3             4.0  1990-1995                                  -0.680327\n",
              "4             5.0  1990-1995                                    -4.3836\n",
              "...           ...        ...                                        ...\n",
              "1320        261.0  2010-2015                                         ..\n",
              "1321        262.0  2010-2015                                         ..\n",
              "1322        263.0  2010-2015                                         ..\n",
              "1323        264.0  2010-2015                                         ..\n",
              "1324        265.0  2010-2015                                         ..\n",
              "\n",
              "[1325 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9727f126-c5de-4404-b1dc-ae558751e42f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sort\\norder</th>\n",
              "      <th>Years</th>\n",
              "      <th>Annual rate of change of the refugee stock</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>-2.123497</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>9.388424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.0</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>-2.839417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>-0.680327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>1990-1995</td>\n",
              "      <td>-4.3836</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1320</th>\n",
              "      <td>261.0</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1321</th>\n",
              "      <td>262.0</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1322</th>\n",
              "      <td>263.0</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1323</th>\n",
              "      <td>264.0</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1324</th>\n",
              "      <td>265.0</td>\n",
              "      <td>2010-2015</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1325 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9727f126-c5de-4404-b1dc-ae558751e42f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9727f126-c5de-4404-b1dc-ae558751e42f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9727f126-c5de-4404-b1dc-ae558751e42f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    }
  ]
}
